# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven (Docker)

env:
  name: "Minecraft-Fireworks"
  version: "2.0.0"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  test: 
    strategy:
      max-parallel: 3
      matrix:
        jdk: [16, 11, 8, 17, 18]
        mc: [1.14.3, 1.15.2, 1.16.5, 1.17.1, 1.18.2, 1.19.3]
    
    runs-on: [self-hosted]
    container: "127.0.0.1:5000/spigot:jdk${{matrix.jdk}}"
    steps:
    - name: "checkout"
      uses: actions/checkout@v3.3.0
    - name: 'Test with Maven'
      run: mvn test --file pom-${{ matrix.mc }}.xml
      continue-on-error: true
    
    
  build:     
    strategy:
      max-parallel: 3
      matrix:
        mc: [1.14.3, 1.15.2, 1.16.5, 1.17.1, 1.18.2, 1.19.3]
    runs-on: [self-hosted]
    container: "127.0.0.1:5000/spigot:jdk8"

    steps:
    - name: "checkout"
      uses: actions/checkout@v3.3.0
    - name: Build with Maven
      run: mvn -B package --file pom-${{matrix.mc}}.xml
    - name: "upload"
      uses: actions/upload-artifact@v3.1.2
      with:
        name: "${{env.name}}_${{env.version}}_${{matrix.mc}}"
        path: ./target/Minecraft*.jar
        
  package:
      needs: [build]
      runs-on: [self-hosted]
      container: "ubuntu:22.10"
      steps:
        - name: Download all artifacts
          uses: actions/download-artifact@v3

        - name: "copy and package"
          run: |
              mkdir ./artifacts
              cp -r ./${{env.name}}* ./artifacts
#              tar -zcvf ./${{env.name}}-${{env.version}}.tar.gz ./artifacts

        - name: "upload-package-file"
          uses: actions/upload-artifact@v3
          with:
            name: ${{env.name}}-${{env.version}}
            path: ./artifacts
           # path: ./${{env.name}}-${{env.version}}.tar.gz

    
