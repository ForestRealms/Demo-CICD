# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 仅构建，不测试

env:
  version: "2.0.0"
  name: "Minecraft Fireworks"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
  
    strategy:
      matrix:
        mc: [1.14.3, 1.15.2, 1.16.5, 1.17.1, 1.18.2, 1.19.3]

    runs-on: [self-hosted] 
    container: "maven:3.8.2-openjdk-8"

    steps:
    - uses: actions/checkout@v3
    
    - name: Build with Maven
      run: mvn clean package --file pom-${{matrix.mc}}.xml
      
    - name: upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.name}}-${{env.version}}-${{matrix.mc}}
        path: "./target/M*.jar"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/jar
      
  package:
    runs-on: [self-hosted]
    steps:
      - name: Download all artifacts"
        uses: actions/download-artifact@v3
        
      - name: "ls"
        run: "ls"
    
